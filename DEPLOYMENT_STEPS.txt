╔═══════════════════════════════════════════════════════════════════════╗
║                LEADGEN COMMENT BOT - DOCKER DEPLOYMENT                ║
╚═══════════════════════════════════════════════════════════════════════╝

📦 STEP 1: SETUP ENVIRONMENT VARIABLES
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. Copy the template:
   $ cp env.template .env

2. Edit with your credentials:
   $ nano .env
   
   Required variables:
   ✓ LINKEDIN_USER     (your LinkedIn email)
   ✓ LINKEDIN_PASS     (your LinkedIn password)
   ✓ YOUTUBE_USER      (your YouTube email)
   ✓ YOUTUBE_PASS      (your YouTube password)
   ✓ PORT              (default: 3000)

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

🚀 STEP 2: DEPLOY (Choose one method)
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

METHOD A: Docker Compose (Recommended - Easiest)
   $ docker-compose up -d
   
METHOD B: Automated Scripts
   $ ./docker-build.sh
   $ ./docker-run.sh
   
METHOD C: Manual Docker Commands
   $ docker build -t leadgen-bot .
   $ docker run -d --name leadgen-bot -p 3000:3000 \
     -e LINKEDIN_USER="your@email.com" \
     -e LINKEDIN_PASS="password" \
     -e YOUTUBE_USER="your@email.com" \
     -e YOUTUBE_PASS="password" \
     --cap-add=SYS_ADMIN \
     leadgen-bot

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

✅ STEP 3: VERIFY DEPLOYMENT
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

1. Check health:
   $ curl http://localhost:3000/health
   
2. View logs:
   $ docker-compose logs -f
   OR
   $ docker logs -f leadgen-bot
   
3. Test LinkedIn endpoint:
   $ curl -X POST http://localhost:3000/api/linkedin/comment \
     -H "Content-Type: application/json" \
     -d '{"postUrl": "POST_URL", "comment": "Test comment"}'
   
4. Test YouTube endpoint:
   $ curl -X POST http://localhost:3000/api/youtube/comment \
     -H "Content-Type: application/json" \
     -d '{"videoUrl": "VIDEO_URL", "comment": "Test comment"}'

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

🔧 COMMON OPERATIONS
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

View logs:          docker-compose logs -f
Restart:            docker-compose restart
Stop:               docker-compose down
Stop + Clear data:  docker-compose down -v
Update & redeploy:  docker-compose up -d --build
Check status:       docker ps

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

📚 DOCUMENTATION
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

Quick Start:        DOCKER_QUICK_START.md
Full Guide:         DOCKER_DEPLOYMENT.md
Files Summary:      DOCKER_FILES_SUMMARY.md
This Guide:         DEPLOYMENT_STEPS.txt

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

⚠️  IMPORTANT NOTES
━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

• Browser profiles are persisted in Docker volumes
• Login sessions are maintained across restarts
• Never commit .env file (already in .gitignore)
• First run may require manual verification for LinkedIn/YouTube
• Container needs SYS_ADMIN capability for Chrome sandbox

━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━

